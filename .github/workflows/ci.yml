name: CI
on:
  push:
    branches:
      - main # Trigger CI on pushes to the main branch
      - test/workflow # Test branch
jobs:
  test:
    name: Run Tests
    runs-on: self-hosted
    strategy:
      matrix:
        node-version:
          - 22 # Test on multiple Node.js versions
    environment: MONGO_URI
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Print Env Secret
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "Secret 1 is: $MONGO_URI"
          echo "Secret 2 is: $JWT_SECRET"
          echo "Secret 3 is: $PORT"

      - name: Cleanup old builds & node_modules if exist
        run: |
          echo "Disk usage BEFORE cleanup:"
          df -h

          echo "Starting cleanup..."

          if [ -d "frontend/build" ]; then
            echo "Deleting frontend/build"
            rm -rf frontend/build
          else
            echo "frontend/build does not exist"
          fi

          if [ -d "frontend/node_modules" ]; then
            echo "Deleting frontend/node_modules"
            rm -rf frontend/node_modules
          else
            echo "frontend/node_modules does not exist"
          fi

          if [ -d "backend/node_modules" ]; then
            echo "Deleting backend/node_modules"
            rm -rf backend/node_modules
          else
            echo "backend/node_modules does not exist"
          fi

          # Runner workspace cleanup
          if [ -d "../_work" ]; then
            echo "Deleting ../_work"
            rm -rf ../_work
          else
            echo "../_work does not exist"
          fi

          echo "Disk usage AFTER cleanup:"
          df -h
      - run: pm2 stop all
      # Install dependencies for backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          npm install --global yarn
          yarn --version
          yarn install
      # Install dependencies for frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          df -h
          sudo rm -rf ./build
          yarn install
          yarn run build
      # Run backend tests
      - name: Run Backend Tests
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        working-directory: ./backend
        run: npm test
      - run: npm ci
      - run: |
          cd ./backend
          touch .env
          echo "${{ secrets.PROD }}" > .env
      - run: pm2 start all
      - run: pm2 restart all
